// Copyright 2013, Big Switch Networks, Inc.
//
// LoxiGen is licensed under the Eclipse Public License,
// version 1.0 (EPL), with the following special exception:
//
// LOXI Exception
//
// As a special exception to the terms of the EPL, you may
// distribute libraries generated by LoxiGen (LoxiGen Libraries)
// under the terms of your choice, provided that copyright and
// licensing notices generated by LoxiGen are not altered or removed
// from the LoxiGen Libraries and the notice provided below is (i)
// included in the LoxiGen Libraries, if distributed in source code
// form and (ii) included in any documentation for the LoxiGen
// Libraries, if distributed in binary form.
//
// Notice: "Copyright 2013, Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler."
//
// You may not use this file except in compliance with the EPL or
// LOXI Exception. You may obtain a copy of the EPL at:
//
// http://www.eclipse.org/legal/epl-v10.html
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an "AS
// IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the EPL for the specific language
// governing permissions and limitations under the EPL.

#version 4

// As a special case, not prefixing this name with "bsn".
// Vendors are intended to subclass of_tlv.
struct of_tlv {
    uint16_t tlv_class == ?; /* OXM class */
    uint8_t type;
    uint8_t length;
};

struct of_tlv_bsn : of_tlv {
    uint16_t tlv_class == 0x0003;
    uint8_t type == ?;
    uint8_t length;
};

struct of_bsn_table_entry_add : of_bsn_header {
    uint8_t version;
    uint8_t type == 4;
    uint16_t length;
    uint32_t xid;
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 46;
    uint64_t checksum;
    uint16_t table_id;
    uint16_t key_length;
    list(of_tlv_t) key;
    list(of_tlv_t) value;
};

struct of_bsn_table_entry_delete : of_bsn_header {
    uint8_t version;
    uint8_t type == 4;
    uint16_t length;
    uint32_t xid;
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 47;
    uint16_t table_id;
    list(of_tlv_t) key;
};

struct of_bsn_table_clear : of_bsn_header {
    uint8_t version;
    uint8_t type == 4;
    uint16_t length;
    uint32_t xid;
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 48;
    uint64_t checksum;
    uint64_t checksum_mask;
    uint16_t table_id;
};

struct of_bsn_table_set_buckets_size : of_bsn_header {
    uint8_t version;
    uint8_t type == 4;
    uint16_t length;
    uint32_t xid;
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 49;
    uint32_t size;
};

struct of_bsn_table_entry_desc_stats_request : of_bsn_stats_request {
    uint8_t version;
    uint8_t type == 18;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_request_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 2;
    uint64_t checksum;
    uint64_t checksum_mask;
    uint16_t table_id;
};

struct of_bsn_table_entry_desc_stats_entry {
    uint16_t length;
    uint16_t key_length;
    list(of_tlv_t) key;
    list(of_tlv_t) value;
    // TODO pad?
};

struct of_bsn_table_entry_desc_stats_reply : of_bsn_stats_reply {
    uint8_t version;
    uint8_t type == 19;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_reply_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 2;
    list(of_bsn_table_entry_desc_stats_entry_t) entries;
};

struct of_bsn_table_entry_stats_entry {
    uint16_t length;
    uint16_t key_length;
    list(of_tlv_t) key;
    list(of_tlv_t) stats;
    // TODO pad?
};

struct of_bsn_table_entry_stats_request : of_bsn_stats_request {
    uint8_t version;
    uint8_t type == 18;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_request_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 3;
    uint64_t checksum;
    uint64_t checksum_mask;
    uint16_t table_id;
};

struct of_bsn_table_entry_stats_reply : of_bsn_stats_reply {
    uint8_t version;
    uint8_t type == 19;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_reply_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 3;
    list(of_bsn_table_entry_stats_entry_t) entries;
};

struct of_bsn_table_desc_stats_request : of_bsn_stats_request {
    uint8_t version;
    uint8_t type == 18;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_request_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 4;
};

struct of_bsn_table_desc_stats_entry {
    uint16_t table_id;
    of_table_name_t name;
    /* TODO properties */
};

struct of_bsn_table_desc_stats_reply : of_bsn_stats_reply {
    uint8_t version;
    uint8_t type == 19;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_reply_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 4;
    list(of_bsn_table_desc_stats_entry_t) entries;
};

struct of_bsn_table_bucket_stats_request : of_bsn_stats_request {
    uint8_t version;
    uint8_t type == 18;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_request_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 5;
    uint16_t table_id;
};

struct of_bsn_table_bucket_stats_entry {
    uint64_t checksum;
};

struct of_bsn_table_bucket_stats_reply : of_bsn_stats_reply {
    uint8_t version;
    uint8_t type == 19;
    uint16_t length;
    uint32_t xid;
    uint16_t stats_type == 0xffff;
    enum ofp_stats_reply_flags flags;
    pad(4);
    uint32_t experimenter == 0x5c16c7;
    uint32_t subtype == 5;
    list(of_bsn_table_bucket_stats_entry_t) entries;
};
